#include <iostream>
using namespace std;

class OfertaTuristica {
public:
    string nume;
    string destinatie;
    float pret;
    string data_inceput;
    string data_sfarsit;
    int locuri_disponibile;

    // Constructor cu toti parametrii
    OfertaTuristica(string nume, string destinatie, float pret, string data_inceput, string data_sfarsit, int locuri_disponibile) {
        this->nume = nume;
        this->destinatie = destinatie;
        this->pret = pret;
        this->data_inceput = data_inceput;
        this->data_sfarsit = data_sfarsit;
        this->locuri_disponibile = locuri_disponibile;
    }

    // Constructor cu nume si destinatie
    OfertaTuristica(string nume, string destinatie) {
        this->nume = nume;
        this->destinatie = destinatie;
        this->pret = 0.0; // Initializare cu valoare implicita
        this->data_inceput = "";
        this->data_sfarsit = "";
        this->locuri_disponibile = 0;
    }

    // Constructor fara parametri
    OfertaTuristica() {
        nume = "";
        destinatie = "";
        pret = 0.0;
        data_inceput = "";
        data_sfarsit = "";
        locuri_disponibile = 0;
    }

    // Funcție statică pentru a calcula durata ofertei
    static int CalculeazaDurata(const OfertaTuristica& oferta) {
        // Aici puteți calcula durata în funcție de data de început și data de sfârșit
        // Returnați durata în zile, luni sau altă unitate, după cum doriți
        // Exemplu simplu pentru zile:
        int durata = 0;
        // Pseudo-cod: calculați durata
        // Exemplu: durata = diferența dintre data_sfarsit și data_inceput în zile
        return durata;
    }
};

class AgentieTurism {
public:
    string nume;
    string adresa;
    string telefon;
    OfertaTuristica* oferte_turistice;
    static const int numarMaximOferte = 100;

    // Constructor cu toti parametrii
    AgentieTurism(string nume, string adresa, string telefon) {
        this->nume = nume;
        this->adresa = adresa;
        this->telefon = telefon;
        this->oferte_turistice = new OfertaTuristica[numarMaximOferte];
    }

    // Constructor cu nume si adresa
    AgentieTurism(string nume, string adresa) {
        this->nume = nume;
        this->adresa = adresa;
        this->telefon = "";
        this->oferte_turistice = new OfertaTuristica[numarMaximOferte];
    }

    // Constructor fara parametri
    AgentieTurism() {
        nume = "";
        adresa = "";
        telefon = "";
        oferte_turistice = new OfertaTuristica[numarMaximOferte];
    }

    // Functie statica pentru a afisa toate ofertele
    static void AfiseazaOferte(const AgentieTurism& agentie) {
        cout << "Ofertele din agentia de turism " << agentie.nume << ":" << endl;
        for (int i = 0; i < numarMaximOferte; i++) {
            if (!agentie.oferte_turistice[i].nume.empty()) {
                cout << "Oferta: " << agentie.oferte_turistice[i].nume << " - Destinatie: " << agentie.oferte_turistice[i].destinatie << endl;
            }
        }
    }

    // Funcție pentru adaugarea unei oferte in agentie
    void AdaugaOferta(const OfertaTuristica& oferta) {
        for (int i = 0; i < numarMaximOferte; i++) {
            if (oferte_turistice[i].nume.empty()) {
                oferte_turistice[i] = oferta;
                break;
            }
        }
    }
};

class Rezervare {
public:
    const string nume;
    string destinatie;
    string data;
    int numar_adulti;
    int numar_copii;

    // Constructor cu toti parametrii (folosind lista de initializare)
    Rezervare(string nume, string destinatie, string data, int numar_adulti, int numar_copii)
        : nume(nume), destinatie(destinatie), data(data), numar_adulti(numar_adulti), numar_copii(numar_copii) {
    }

    // Constructor cu nume si destinatie
    Rezervare(string nume, string destinatie)
        : nume(nume), destinatie(destinatie), data(""), numar_adulti(0), numar_copii(0) {
    }

    // Constructor fara parametri (atributele constante sunt deja initializate)
    Rezervare()
        : nume(""), destinatie(""), data(""), numar_adulti(0), numar_copii(0) {
    }

    // Funcție statica pentru a calcula costul rezervarii
    static float CalculeazaCostul(const Rezervare& rezervare) {
        // Aici puteți calcula costul în funcție de destinație, numărul de adulți și copii, și alte criterii
        return 0.0;
    }
};

int main() {
    // Testați toti constructorii si funcțiile statice
    OfertaTuristica oferta1("Vacanta la mare", "Mamaia", 800.0, "2023-07-15", "2023-07-22", 50);
    OfertaTuristica oferta2("City break", "Paris");
    OfertaTuristica oferta3;
    AgentieTurism agentie1("Travel World", "Strada Turistica, Nr. 123", "+1234567890");
    AgentieTurism agentie2("Adventure Tours", "Strada Aventurii, Nr. 456");
    AgentieTurism agentie3;
    Rezervare rezervare1("Maria", "Mamaia", "2023-07-17", 2, 1);
    Rezervare rezervare2("Andrei", "Paris");
    Rezervare rezervare3;

    // Adaugați oferte la agentii de turism
    agentie1.AdaugaOferta(oferta1);
    agentie2.AdaugaOferta(oferta2);
    agentie2.AdaugaOferta(oferta3);

    // Afisati ofertele din agentiile de turism
    AgentieTurism::AfiseazaOferte(agentie1);
    AgentieTurism::AfiseazaOferte(agentie2);

    return 0;
}
